{"version":3,"file":"static/js/535.ed2dbcbb.chunk.js","mappings":"oSAGaA,EAAYC,EAAAA,GAAAA,IAAH,8RAiBTC,EAAeD,EAAAA,GAAAA,IAAH,oCAIZE,EAAQF,EAAAA,GAAAA,IAAH,uIAQLG,EAAaH,EAAAA,GAAAA,GAAH,+GAOVI,EAAYJ,EAAAA,GAAAA,IAAH,sHAQTK,EAAgBL,EAAAA,GAAAA,IAAH,8EAObM,EAAgBN,EAAAA,GAAAA,IAAH,+EAMbO,EAAiBP,EAAAA,GAAAA,EAAH,iEAKdQ,GAAoBR,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,CAAH,+KAajBU,EAAYV,EAAAA,GAAAA,KAAH,6CAITW,GAAYX,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,CAAH,6S,SClETY,EAAmB,SAAC,GAI1B,IAAD,IAHJC,QAAWC,EAGP,EAHOA,IAAKC,EAGZ,EAHYA,KAAMC,EAGlB,EAHkBA,IAAKC,EAGvB,EAHuBA,MAC3BC,EAEI,EAFJA,gBACAC,EACI,EADJA,SAEA,GAA4BC,EAAAA,EAAAA,UAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACOD,EAAJ,IAAXH,EACD,GAAE,CAACA,IAeJ,OACE,UAACtB,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAOwB,IAAKV,EAAKW,IAAKZ,EAAMa,MAAM,aAEpC,UAACxB,EAAD,YACE,UAACC,EAAD,YACE,SAACF,EAAD,UAAaY,KACb,UAACT,EAAD,YACE,SAACE,EAAD,CAAmBqB,QAlBL,WACtBP,GAAU,SAAAQ,GAAS,OAAIA,EAAY,CAAhB,IACnBX,GAAS,SAAAW,GAAS,OAAIA,EAAYb,CAAhB,GACnB,EAesDc,SAAUR,EAAvD,SAAmE,OAGnE,SAAChB,EAAD,UAAiBc,KACjB,SAACb,EAAD,CAAmBqB,QA1BL,WACtBP,GAAU,SAAAQ,GAAS,OAAIA,EAAY,CAAhB,IACnBX,GAAS,SAAAW,GAAS,OAAIA,EAAYb,CAAhB,GACnB,EAuBS,SAA6C,UAE/C,0BACE,SAACP,EAAD,UAAW,WAAkB,IAAEO,EAAQI,EAAO,WAGlD,UAACV,EAAD,CAAWkB,QAvBI,WACnBX,GAAgB,SAAAY,GAAS,OAAIA,EAAUE,QAAO,SAAAC,GAAI,OAAIA,EAAKnB,MAAQA,CAAjB,GAAzB,GAC1B,EAqBK,WACE,SAAC,MAAD,KACA,uBAAG,wBAKZ,E,8BChEYoB,EAAgBlC,EAAAA,GAAAA,KAAH,+JAUbmC,EAAYnC,EAAAA,GAAAA,EAAH,sHAOToC,EAAapC,EAAAA,GAAAA,IAAH,mFAMVqC,GAAQrC,EAAAA,GAAAA,MAAH,sFAOLsC,GAAQtC,EAAAA,GAAAA,MAAH,iOAaJ,SAAAuC,GAAI,OAAKA,EAAKC,MAAQ,gBAAkB,iBAApC,IAILC,GAAoBzC,EAAAA,GAAAA,EAAH,2DAKjB0C,IAAe1C,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,CAAH,oFC1CZ2C,GAAY,SAAC,GAAc,EAAZC,MAAa,IACvC,GAAmDC,EAAAA,EAAAA,KAApCC,EAAf,EAAQC,MAA2BC,EAAnC,EAA0BC,QAEpBC,EAAiBC,EAAAA,KAAaC,MAAM,CACxCL,MAAOI,EAAAA,KACJE,QAAQ,2DAA4D,CACnEC,QAAS,gBACTC,oBAAoB,IAErBC,SAAS,YACZP,QAASE,EAAAA,KAAaK,SAAS,cAG3BC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,MAAOD,EACPG,QAASD,GAEXY,iBAAkBV,EAClBW,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,QAAQC,IAAIH,GACZC,EAAU,CAAEhB,MAAO,GAAIE,QAAS,IACjC,IAGH,OACE,UAACf,EAAD,CAAe2B,SAAUJ,EAAOS,aAAhC,WACE,SAAC/B,EAAD,UAAW,0BACX,UAACC,EAAD,YACE,UAACC,GAAD,WAAO,gBAEL,SAACC,GAAD,CACE6B,KAAK,MACLpD,KAAK,QACLqD,YAAY,gBACZC,MAAOZ,EAAOK,OAAOf,MACrBuB,SAAUb,EAAOc,aACjB/B,MAAOiB,EAAOe,OAAP,QAERf,EAAOgB,QAAP,QACC,SAAChC,GAAD,UAAoBgB,EAAOe,OAAP,YAGxB,UAACnC,GAAD,WAAO,WAEL,SAACC,GAAD,CACE6B,KAAK,OACLpD,KAAK,UACLqD,YAAY,2BACZC,MAAOZ,EAAOK,OAAOb,QACrBqB,SAAUb,EAAOc,aACjB/B,MAAOiB,EAAOe,OAAP,UAERf,EAAOgB,QAAP,UACC,SAAChC,GAAD,UAAoBgB,EAAOe,OAAP,iBAI1B,SAAC9B,GAAD,CAAcyB,KAAK,SAAnB,SAA4B,oBAGjC,E,sBCtEYpE,GAAYC,EAAAA,GAAAA,IAAH,mFAMT0E,GAAY1E,EAAAA,GAAAA,IAAH,sDAKT2E,GAAc3E,EAAAA,GAAAA,IAAH,sDAKX4E,GAAe5E,EAAAA,GAAAA,GAAH,4HAQZ6E,GAAiB7E,EAAAA,GAAAA,IAAH,wQAcd8E,GAAY9E,EAAAA,GAAAA,EAAH,uGAOT+E,GAAmB/E,EAAAA,GAAAA,IAAH,0DAKhBgF,GAAUhF,EAAAA,GAAAA,IAAH,2ZAUMiF,GAQEC,ICV5B,GA/CyB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcjE,EAAsB,EAAtBA,gBACxC,GAA0BE,EAAAA,EAAAA,UAAS,GAAnC,eAAOwB,EAAP,KAAczB,EAAd,KACA,GAAoDC,EAAAA,EAAAA,UAAS,IAA7D,eAAOgE,EAAP,KAA2BC,EAA3B,KAQA,OAPArB,QAAQC,IAAImB,IAEZ3D,EAAAA,EAAAA,YAAU,WACR,IAAM6D,EAASH,EAAaI,KAAI,SAAAtD,GAAI,OAAIA,EAAKhB,KAAT,IACpCE,EAASmE,EAAOE,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,CAAvB,GAA6B,GACrD,GAAE,CAACP,KAGF,UAAC,GAAD,YACE,SAACR,GAAD,WACE,SAAChC,GAAD,CAAWC,MAAOA,OAEpB,SAAC8B,GAAD,UACGS,EAAaQ,OAAS,GACrB,iCACE,SAACf,GAAD,UACGO,EAAaI,KAAI,SAAA1E,GAChB,OACE,yBACE,SAACD,EAAD,CACEC,QAASA,EACTK,gBAAiBA,EACjBC,SAAUA,EACViE,mBAAoBA,EACpBC,sBAAuBA,KANlBxE,EAAQC,IAUpB,OAEH,SAAC+D,GAAD,WACE,UAACC,GAAD,WAAW,sBAAoBlC,EAAM,aAIzC,SAACmC,GAAD,WACE,SAACC,GAAD,UAMX,C","sources":["components/ShoppingCartCard/ShoppingCartCard.styled.jsx","components/ShoppingCartCard/ShoppingCartCard.jsx","components/OrderForm/OrderForm.styled.jsx","components/OrderForm/OrderForm.jsx","pages/ShoppingCartPage/ShoppingCartPage.styled.jsx","pages/ShoppingCartPage/ShoppingCartPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { StyledBtn } from '../Button/Button.styled';\n\nexport const Container = styled.div`\n  width: 450px;\n  min-height: 250px;\n  padding: 20px;\n\n  display: flex;\n  gap: 10px;\n\n  border-radius: 20px;\n  border: 2px solid #286507;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.25);\n\n  font-size: 20px;\n  line-height: 22px;\n  text-align: center;\n`;\n\nexport const PictureThumb = styled.div`\n  flex: 1;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  border-radius: 20px;\n  border: 2px solid #f8b602;\n`;\n\nexport const FigureText = styled.h3`\n  margin-bottom: 30px;\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 22px;\n`;\n\nexport const InfoThumb = styled.div`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const SettingsThumb = styled.div`\n  > p {\n    margin-top: 15px;\n    color: red;\n  }\n`;\n\nexport const PortionsThumb = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const PortionsNumber = styled.p`\n  font-weight: 600;\n  font-size: 32px;\n`;\n\nexport const ChangePortionsBtn = styled(StyledBtn)`\n  width: 35px;\n  height: 35px;\n  padding: 2px;\n  border-radius: 5px;\n\n  font-size: 20px;\n\n  :disabled {\n    background-color: lightgray;\n  }\n`;\n\nexport const TextLabel = styled.span`\n  font-weight: 600;\n`;\n\nexport const RemoveBtn = styled(StyledBtn)`\n  display: flex;\n  gap: 5px;\n  justify-content: center;\n  align-items: center;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: red;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { AiFillDelete } from 'react-icons/ai';\nimport {\n  Container,\n  PictureThumb,\n  Image,\n  FigureText,\n  InfoThumb,\n  SettingsThumb,\n  TextLabel,\n  PortionsThumb,\n  PortionsNumber,\n  ChangePortionsBtn,\n  RemoveBtn,\n} from './ShoppingCartCard.styled';\n\nexport const ShoppingCartCard = ({\n  product: { _id, name, img, price },\n  setCurrentOrder,\n  setTotal,\n}) => {\n  const [amount, setAmount] = useState(1);\n  const [isDisabled, setIsDisabled] = useState(false);\n\n  useEffect(() => {\n    amount === 1 ? setIsDisabled(true) : setIsDisabled(false);\n  }, [amount]);\n\n  const handleIncrement = () => {\n    setAmount(prevState => prevState + 1);\n    setTotal(prevState => prevState + price);\n  };\n  const handleDecrement = () => {\n    setAmount(prevState => prevState - 1);\n    setTotal(prevState => prevState - price);\n  };\n\n  const handleDelete = () => {\n    setCurrentOrder(prevState => prevState.filter(item => item._id !== _id));\n  };\n\n  return (\n    <Container>\n      <PictureThumb>\n        <Image src={img} alt={name} width=\"300px\" />\n      </PictureThumb>\n      <InfoThumb>\n        <SettingsThumb>\n          <FigureText>{name}</FigureText>\n          <PortionsThumb>\n            <ChangePortionsBtn onClick={handleDecrement} disabled={isDisabled}>\n              -\n            </ChangePortionsBtn>\n            <PortionsNumber>{amount}</PortionsNumber>\n            <ChangePortionsBtn onClick={handleIncrement}>+</ChangePortionsBtn>\n          </PortionsThumb>\n          <p>\n            <TextLabel>Price:</TextLabel> {price * amount}$\n          </p>\n        </SettingsThumb>\n        <RemoveBtn onClick={handleDelete}>\n          <AiFillDelete />\n          <p>Remove item</p>\n        </RemoveBtn>\n      </InfoThumb>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { StyledBtn } from '../Button/Button.styled';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding: 5% 10%;\n  border-radius: 20px;\n  background-color: #aac76f;\n`;\n\nexport const FormTitle = styled.p`\n  font-weight: 600;\n  font-size: 22px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const LabelThumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  font-weight: 600;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  border-radius: 10px;\n\n  font-weight: 400;\n\n  :focus,\n  :active {\n    outline: 3px solid #f8b602;\n  }\n\n  :not(:placeholder-shown) {\n    border: ${prop => (prop.error ? '3px solid red' : '3px solid green')};\n  }\n`;\n\nexport const InputErrorMessage = styled.p`\n  font-size: 16px;\n  color: red;\n`;\n\nexport const MakeOrderBtn = styled(StyledBtn)`\n  width: 250px;\n\n  font-weight: 600;\n  font-size: 22px;\n`;\n","import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useGlobal } from '../../GlobalContext';\nimport {\n  FormContainer,\n  FormTitle,\n  LabelThumb,\n  Label,\n  Input,\n  MakeOrderBtn,\n  InputErrorMessage,\n} from './OrderForm.styled';\n\nexport const OrderForm = ({ total }) => {\n  const { phone: userPhone, address: userAddress } = useGlobal();\n\n  const RegisterSchema = Yup.object().shape({\n    phone: Yup.string()\n      .matches(/^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/, {\n        message: 'Invalid phone',\n        excludeEmptyString: true,\n      })\n      .required('Required'),\n    address: Yup.string().required('Required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      phone: userPhone,\n      address: userAddress,\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (values, { resetForm }) => {\n      console.log(values);\n      resetForm({ phone: '', address: '' });\n    },\n  });\n\n  return (\n    <FormContainer onSubmit={formik.handleSubmit}>\n      <FormTitle>Set my delivery data</FormTitle>\n      <LabelThumb>\n        <Label>\n          Phone number\n          <Input\n            type=\"tel\"\n            name=\"phone\"\n            placeholder=\"+380112223344\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            error={formik.errors['phone']}\n          />\n          {formik.touched['phone'] && (\n            <InputErrorMessage>{formik.errors['phone']}</InputErrorMessage>\n          )}\n        </Label>\n        <Label>\n          Address\n          <Input\n            type=\"text\"\n            name=\"address\"\n            placeholder=\"Kyiv, Volodymyrska str.1\"\n            value={formik.values.address}\n            onChange={formik.handleChange}\n            error={formik.errors['address']}\n          />\n          {formik.touched['address'] && (\n            <InputErrorMessage>{formik.errors['address']}</InputErrorMessage>\n          )}\n        </Label>\n      </LabelThumb>\n      <MakeOrderBtn type=\"submit\">Make my order</MakeOrderBtn>\n    </FormContainer>\n  );\n};\n","import styled from 'styled-components';\nimport * as image from '../../images/empty_cart.png';\nimport * as bigImage from '../../images/empty_cart@2x.png';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const BigColumn = styled.div`\n  flex: 2;\n  padding: 10px;\n`;\n\nexport const SmallColumn = styled.div`\n  flex: 1;\n  padding: 10px;\n`;\n\nexport const ProductsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  padding: 20px 0;\n`;\n\nexport const MakeOrderThumb = styled.div`\n  width: 100%;\n  height: 75px;\n  padding: 10px 30px;\n\n  display: flex;\n  justify-content: flex-end;\n\n  background-color: #286507;\n  border-radius: 20px;\n  border: 2px solid #286507;\n  box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.25);\n`;\n\nexport const TotalText = styled.p`\n  font-weight: 600;\n  font-size: 32px;\n  line-height: 1.2;\n  color: white;\n`;\n\nexport const PlaceholderThumb = styled.div`\n  width: 100%;\n  height: 500px;\n`;\n\nexport const BgThumb = styled.div`\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n\n  margin: auto;\n\n  width: 70%;\n  height: 80%;\n\n  background-image: url(${image.default});\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${bigImage.default});\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport { ShoppingCartCard } from '../../components/ShoppingCartCard/ShoppingCartCard';\nimport { OrderForm } from '../../components/OrderForm/OrderForm';\nimport {\n  Container,\n  BigColumn,\n  SmallColumn,\n  ProductsList,\n  MakeOrderThumb,\n  TotalText,\n  PlaceholderThumb,\n  BgThumb,\n} from './ShoppingCartPage.styled';\n\nconst ShoppingCartPage = ({ currentOrder, setCurrentOrder }) => {\n  const [total, setTotal] = useState(0);\n  const [totalDeliveryOrder, setTotalDeliveryOrder] = useState([]);\n  console.log(totalDeliveryOrder);\n\n  useEffect(() => {\n    const prices = currentOrder.map(item => item.price);\n    setTotal(prices.reduce((prev, elem) => prev + elem, 0));\n  }, [currentOrder]);\n\n  return (\n    <Container>\n      <SmallColumn>\n        <OrderForm total={total} />\n      </SmallColumn>\n      <BigColumn>\n        {currentOrder.length > 0 ? (\n          <>\n            <ProductsList>\n              {currentOrder.map(product => {\n                return (\n                  <li key={product._id}>\n                    <ShoppingCartCard\n                      product={product}\n                      setCurrentOrder={setCurrentOrder}\n                      setTotal={setTotal}\n                      totalDeliveryOrder={totalDeliveryOrder}\n                      setTotalDeliveryOrder={setTotalDeliveryOrder}\n                    />\n                  </li>\n                );\n              })}\n            </ProductsList>\n            <MakeOrderThumb>\n              <TotalText>Total order price: {total}$</TotalText>\n            </MakeOrderThumb>\n          </>\n        ) : (\n          <PlaceholderThumb>\n            <BgThumb />\n          </PlaceholderThumb>\n        )}\n      </BigColumn>\n    </Container>\n  );\n};\n\nexport default ShoppingCartPage;\n"],"names":["Container","styled","PictureThumb","Image","FigureText","InfoThumb","SettingsThumb","PortionsThumb","PortionsNumber","ChangePortionsBtn","StyledBtn","TextLabel","RemoveBtn","ShoppingCartCard","product","_id","name","img","price","setCurrentOrder","setTotal","useState","amount","setAmount","isDisabled","setIsDisabled","useEffect","src","alt","width","onClick","prevState","disabled","filter","item","FormContainer","FormTitle","LabelThumb","Label","Input","prop","error","InputErrorMessage","MakeOrderBtn","OrderForm","total","useGlobal","userPhone","phone","userAddress","address","RegisterSchema","Yup","shape","matches","message","excludeEmptyString","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","console","log","handleSubmit","type","placeholder","value","onChange","handleChange","errors","touched","BigColumn","SmallColumn","ProductsList","MakeOrderThumb","TotalText","PlaceholderThumb","BgThumb","image","bigImage","currentOrder","totalDeliveryOrder","setTotalDeliveryOrder","prices","map","reduce","prev","elem","length"],"sourceRoot":""}